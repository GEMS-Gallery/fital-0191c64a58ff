type WorkoutProgress = 
 record {
   completedExercises: vec record {
                             text;
                             nat;
                             nat;
                             bool;
                           };
   date: Time;
 };
type WorkoutPlan = record {exercises: vec record {
                                            text;
                                            nat;
                                            nat;
                                          };};
type UserPreferences = 
 record {
   equipment: vec text;
   fitnessLevel: text;
   goals: vec text;
   preferences: vec text;
 };
type Time = int;
type Result_1 = 
 variant {
   err: text;
   ok: WorkoutPlan;
 };
type Result = 
 variant {
   err: text;
   ok;
 };
type Exercise = 
 record {
   description: text;
   difficulty: nat;
   name: text;
 };
service : {
  generateWorkoutPlan: (UserPreferences) -> (Result_1);
  getExerciseLibrary: () -> (vec Exercise) query;
  logWorkoutProgress: (WorkoutProgress) -> (Result);
}
